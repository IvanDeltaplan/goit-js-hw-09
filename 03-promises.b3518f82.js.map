{"mappings":"qhBAGA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,UAEnCC,GADOF,SAASC,cAAc,QACjBD,SAASG,kBAAkB,UACxCC,EAAYJ,SAASG,kBAAkB,QACvCE,EAAcL,SAASG,kBAAkB,UAgC/C,SAASG,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAChCC,YAAW,KAAUN,EACnBI,EAAQ,C,SAACN,E,MAASC,IAElBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAEvBA,EAAM,G,CApCXT,EAAUiB,iBAAiB,SAE5B,SAAmBC,GACjBA,EAAEC,iBAEF,MAAMC,EAAsBd,EAAY,GAAGe,MACnCC,EAAYjB,EAAU,GAAGgB,MACzBE,EAAapB,EAAW,GAAGkB,MAEjC,IAAK,IAAIG,EAAI,EAAGA,GAAGJ,EAAqBI,IACxC,CAMFjB,EALmBiB,EAEHD,EAAaD,GAFVE,EAE8B,IAIhDC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// import { reject } from \"lodash\";\n// import Notiflix, { Notify } from \"notiflix\";\n\nimport Notiflix from \"notiflix\";\n\nconst submitBtn = document.querySelector(\"button\")\nconst form = document.querySelector(\"form\")\nconst delayInput = document.getElementsByName(\"delay\")\nconst stepInput = document.getElementsByName(\"step\")\nconst amountInput = document.getElementsByName(\"amount\")\n\n\n\n submitBtn.addEventListener(\"click\", onSubmit);\n\nfunction onSubmit (e){\n  e.preventDefault();\n  //\n  const qtyOfCreatedPromise = amountInput[0].value;\n    const delayStep = stepInput[0].value;\n    const delayFirst = delayInput[0].value;\n    \n    for (let i = 1; i<=qtyOfCreatedPromise; i++)\n    {\n      let position = i;\n      //let delay = delayFirst+delayStep;\n      let delay = delayFirst + delayStep*(position-1);\n\n\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n}\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise ((resolve, reject) =>{\n  setTimeout(()=> {if (shouldResolve) {\n    resolve({position,delay})\n  } else {\n    reject({position, delay})\n  }\n    },delay);\n  })\n  }\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$delayInput","getElementsByName","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","qtyOfCreatedPromise","value","delayStep","delayFirst","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b3518f82.js.map"}